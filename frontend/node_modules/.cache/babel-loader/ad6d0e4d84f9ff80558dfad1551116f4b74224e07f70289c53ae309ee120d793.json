{"ast":null,"code":"import React, { useState } from 'react';\n\n// 天津的经纬度\nconst TIANJIN_LAT = 39.1333;\nconst TIANJIN_LNG = 117.2000;\n// 修正API参数，确保获取所有需要的数据\nconst API_URL = `https://api.open-meteo.com/v1/forecast?latitude=${TIANJIN_LAT}&longitude=${TIANJIN_LNG}&hourly=temperature_2m,relativehumidity_2m,windspeed_10m,precipitation,weathercode&daily=temperature_2m_max,temperature_2m_min,weathercode&current_weather=true&timezone=auto`;\n\n// 天气代码映射图标 - 确保所有天气状况都有对应的图标和颜色\nconst weatherCodeMap = {\n  0: {\n    icon: 'fa-sun',\n    color: 'text-yellow-400',\n    desc: '晴朗'\n  },\n  1: {\n    icon: 'fa-sun',\n    color: 'text-yellow-400',\n    desc: '晴朗'\n  },\n  2: {\n    icon: 'fa-cloud-sun',\n    color: 'text-yellow-400',\n    desc: '少云'\n  },\n  3: {\n    icon: 'fa-cloud',\n    color: 'text-gray-400',\n    desc: '多云'\n  },\n  45: {\n    icon: 'fa-smog',\n    color: 'text-gray-500',\n    desc: '雾'\n  },\n  48: {\n    icon: 'fa-smog',\n    color: 'text-gray-500',\n    desc: '浓雾'\n  },\n  51: {\n    icon: 'fa-cloud-drizzle',\n    color: 'text-blue-400',\n    desc: '小雨'\n  },\n  53: {\n    icon: 'fa-cloud-drizzle',\n    color: 'text-blue-400',\n    desc: '中雨'\n  },\n  55: {\n    icon: 'fa-cloud-drizzle',\n    color: 'text-blue-400',\n    desc: '大雨'\n  },\n  61: {\n    icon: 'fa-cloud-rain',\n    color: 'text-blue-500',\n    desc: '小雨'\n  },\n  63: {\n    icon: 'fa-cloud-rain',\n    color: 'text-blue-500',\n    desc: '中雨'\n  },\n  65: {\n    icon: 'fa-cloud-rain',\n    color: 'text-blue-500',\n    desc: '大雨'\n  },\n  71: {\n    icon: 'fa-snowflake',\n    color: 'text-blue-200',\n    desc: '小雪'\n  },\n  73: {\n    icon: 'fa-snowflake',\n    color: 'text-blue-200',\n    desc: '中雪'\n  },\n  75: {\n    icon: 'fa-snowflake',\n    color: 'text-blue-200',\n    desc: '大雪'\n  },\n  80: {\n    icon: 'fa-cloud-showers-heavy',\n    color: 'text-blue-600',\n    desc: '阵雨'\n  },\n  81: {\n    icon: 'fa-cloud-showers-heavy',\n    color: 'text-blue-600',\n    desc: '强阵雨'\n  },\n  82: {\n    icon: 'fa-cloud-showers-heavy',\n    color: 'text-blue-600',\n    desc: '暴雨'\n  },\n  85: {\n    icon: 'fa-snowflake',\n    color: 'text-blue-200',\n    desc: '阵雪'\n  },\n  86: {\n    icon: 'fa-snowflake',\n    color: 'text-blue-200',\n    desc: '大雪'\n  },\n  95: {\n    icon: 'fa-bolt',\n    color: 'text-yellow-500',\n    desc: '雷阵雨'\n  },\n  96: {\n    icon: 'fa-bolt',\n    color: 'text-yellow-500',\n    desc: '雷阵雨'\n  },\n  99: {\n    icon: 'fa-bolt',\n    color: 'text-yellow-500',\n    desc: '强雷阵雨'\n  }\n};\n\n// 更新当前时间显示\nfunction updateCurrentTime() {\n  const now = new Date();\n  const options = {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: false\n  };\n  const formattedTime = now.toLocaleString('zh-CN', options);\n  document.getElementById('current-time').textContent = formattedTime;\n}\n\n// 获取天气数据的函数\nasync function fetchWeatherData() {\n  try {\n    // 更新当前时间\n    updateCurrentTime();\n\n    // 显示加载状态\n    document.getElementById('current-temp').textContent = '--°';\n    document.getElementById('wind-speed').textContent = '-- km/h';\n    document.getElementById('precipitation').textContent = '-- mm';\n    document.getElementById('humidity').textContent = '--%';\n    document.getElementById('temp-range').textContent = '--° ~ --°';\n\n    // 获取天气数据\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    console.log('获取到的天气数据:', data); // 用于调试\n\n    // 更新当前天气\n    updateCurrentWeather(data);\n\n    // 更新未来天气预报\n    updateForecast(data);\n\n    // 添加淡入动画\n    document.getElementById('weather-card').classList.add('fade-in');\n    console.log('天气数据已更新');\n  } catch (error) {\n    console.error('获取天气数据失败:', error);\n    document.getElementById('weather-desc').textContent = '获取数据失败';\n  }\n}\n\n// 更新当前天气信息\nfunction updateCurrentWeather(data) {\n  const current = data.current_weather;\n  const weatherCode = current.weathercode;\n  const weatherInfo = weatherCodeMap[weatherCode] || {\n    icon: 'fa-question',\n    color: 'text-gray-500',\n    desc: '未知'\n  };\n\n  // 更新温度\n  document.getElementById('current-temp').textContent = `${current.temperature}°`;\n\n  // 更新天气描述和图标\n  document.getElementById('weather-desc').textContent = weatherInfo.desc;\n  const weatherIcon = document.getElementById('weather-icon');\n  weatherIcon.className = `fa-solid ${weatherInfo.icon} text-6xl ${weatherInfo.color} animate-pulse-slow`;\n\n  // 更新风速\n  document.getElementById('wind-speed').textContent = `${current.windspeed} km/h`;\n\n  // 获取当前小时的索引\n  const currentTime = new Date(current.time);\n  const currentHourIndex = currentTime.getHours();\n\n  // 更新降水量\n  document.getElementById('precipitation').textContent = `${data.hourly.precipitation[currentHourIndex]} mm`;\n\n  // 更新湿度\n  document.getElementById('humidity').textContent = `${data.hourly.relativehumidity_2m[currentHourIndex]}%`;\n\n  // 计算温度范围\n  const todayMaxTemp = data.daily.temperature_2m_max[0].toFixed(0);\n  const todayMinTemp = data.daily.temperature_2m_min[0].toFixed(0);\n  document.getElementById('temp-range').textContent = `${todayMinTemp}° ~ ${todayMaxTemp}°`;\n}\n\n// 生成未来天气预报的函数\nfunction updateForecast(data) {\n  const container = document.getElementById('forecast-container');\n  const weekdays = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'];\n\n  // 清空容器\n  container.innerHTML = '';\n\n  // 生成未来5天的预报（今天+未来4天）\n  for (let i = 0; i < 5; i++) {\n    // 获取日期\n    const forecastDate = new Date(data.daily.time[i]);\n    const dayOfWeek = weekdays[forecastDate.getDay()];\n    const isToday = i === 0 ? '今天' : dayOfWeek;\n\n    // 获取当天数据\n    const maxTemp = data.daily.temperature_2m_max[i].toFixed(0);\n    const minTemp = data.daily.temperature_2m_min[i].toFixed(0);\n\n    // 创建预报项（仅显示日期和温度）\n    const forecastItem = document.createElement('div');\n    forecastItem.className = 'text-center fade-in';\n    forecastItem.style.animationDelay = `${i * 0.1}s`;\n    forecastItem.innerHTML = `\n            <p class=\"text-xs text-neutral-500\">${isToday}</p>\n            <p class=\"text-xs font-medium text-neutral-800 mt-3\">${minTemp}°~${maxTemp}°</p>\n        `;\n    container.appendChild(forecastItem);\n  }\n}\n\n// 页面加载时初始化\nwindow.addEventListener('DOMContentLoaded', () => {\n  // 立即获取天气数据\n  fetchWeatherData();\n\n  // 每秒更新当前时间\n  setInterval(updateCurrentTime, 1000);\n\n  // 每30分钟自动更新一次天气\n  setInterval(fetchWeatherData, 30 * 60 * 1000);\n\n  // 刷新按钮事件\n  document.getElementById('refresh-btn').addEventListener('click', () => {\n    fetchWeatherData();\n    // 添加按钮点击动画\n    const btn = document.getElementById('refresh-btn');\n    btn.classList.add('scale-95');\n    setTimeout(() => btn.classList.remove('scale-95'), 200);\n  });\n});\nexport default weather;","map":{"version":3,"names":["React","useState","TIANJIN_LAT","TIANJIN_LNG","API_URL","weatherCodeMap","icon","color","desc","updateCurrentTime","now","Date","options","year","month","day","hour","minute","second","hour12","formattedTime","toLocaleString","document","getElementById","textContent","fetchWeatherData","response","fetch","data","json","console","log","updateCurrentWeather","updateForecast","classList","add","error","current","current_weather","weatherCode","weathercode","weatherInfo","temperature","weatherIcon","className","windspeed","currentTime","time","currentHourIndex","getHours","hourly","precipitation","relativehumidity_2m","todayMaxTemp","daily","temperature_2m_max","toFixed","todayMinTemp","temperature_2m_min","container","weekdays","innerHTML","i","forecastDate","dayOfWeek","getDay","isToday","maxTemp","minTemp","forecastItem","createElement","style","animationDelay","appendChild","window","addEventListener","setInterval","btn","setTimeout","remove","weather"],"sources":["D:/软件工程/智慧海洋牧场可视化系统/frontend/src/pages/weather.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// 天津的经纬度\r\nconst TIANJIN_LAT = 39.1333;\r\nconst TIANJIN_LNG = 117.2000;\r\n// 修正API参数，确保获取所有需要的数据\r\nconst API_URL = `https://api.open-meteo.com/v1/forecast?latitude=${TIANJIN_LAT}&longitude=${TIANJIN_LNG}&hourly=temperature_2m,relativehumidity_2m,windspeed_10m,precipitation,weathercode&daily=temperature_2m_max,temperature_2m_min,weathercode&current_weather=true&timezone=auto`;\r\n\r\n// 天气代码映射图标 - 确保所有天气状况都有对应的图标和颜色\r\nconst weatherCodeMap = {\r\n    0: { icon: 'fa-sun', color: 'text-yellow-400', desc: '晴朗' },\r\n    1: { icon: 'fa-sun', color: 'text-yellow-400', desc: '晴朗' },\r\n    2: { icon: 'fa-cloud-sun', color: 'text-yellow-400', desc: '少云' },\r\n    3: { icon: 'fa-cloud', color: 'text-gray-400', desc: '多云' },\r\n    45: { icon: 'fa-smog', color: 'text-gray-500', desc: '雾' },\r\n    48: { icon: 'fa-smog', color: 'text-gray-500', desc: '浓雾' },\r\n    51: { icon: 'fa-cloud-drizzle', color: 'text-blue-400', desc: '小雨' },\r\n    53: { icon: 'fa-cloud-drizzle', color: 'text-blue-400', desc: '中雨' },\r\n    55: { icon: 'fa-cloud-drizzle', color: 'text-blue-400', desc: '大雨' },\r\n    61: { icon: 'fa-cloud-rain', color: 'text-blue-500', desc: '小雨' },\r\n    63: { icon: 'fa-cloud-rain', color: 'text-blue-500', desc: '中雨' },\r\n    65: { icon: 'fa-cloud-rain', color: 'text-blue-500', desc: '大雨' },\r\n    71: { icon: 'fa-snowflake', color: 'text-blue-200', desc: '小雪' },\r\n    73: { icon: 'fa-snowflake', color: 'text-blue-200', desc: '中雪' },\r\n    75: { icon: 'fa-snowflake', color: 'text-blue-200', desc: '大雪' },\r\n    80: { icon: 'fa-cloud-showers-heavy', color: 'text-blue-600', desc: '阵雨' },\r\n    81: { icon: 'fa-cloud-showers-heavy', color: 'text-blue-600', desc: '强阵雨' },\r\n    82: { icon: 'fa-cloud-showers-heavy', color: 'text-blue-600', desc: '暴雨' },\r\n    85: { icon: 'fa-snowflake', color: 'text-blue-200', desc: '阵雪' },\r\n    86: { icon: 'fa-snowflake', color: 'text-blue-200', desc: '大雪' },\r\n    95: { icon: 'fa-bolt', color: 'text-yellow-500', desc: '雷阵雨' },\r\n    96: { icon: 'fa-bolt', color: 'text-yellow-500', desc: '雷阵雨' },\r\n    99: { icon: 'fa-bolt', color: 'text-yellow-500', desc: '强雷阵雨' }\r\n};\r\n\r\n// 更新当前时间显示\r\nfunction updateCurrentTime() {\r\n    const now = new Date();\r\n    const options = {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false\r\n    };\r\n    const formattedTime = now.toLocaleString('zh-CN', options);\r\n    document.getElementById('current-time').textContent = formattedTime;\r\n}\r\n\r\n// 获取天气数据的函数\r\nasync function fetchWeatherData() {\r\n    try {\r\n        // 更新当前时间\r\n        updateCurrentTime();\r\n\r\n        // 显示加载状态\r\n        document.getElementById('current-temp').textContent = '--°';\r\n        document.getElementById('wind-speed').textContent = '-- km/h';\r\n        document.getElementById('precipitation').textContent = '-- mm';\r\n        document.getElementById('humidity').textContent = '--%';\r\n        document.getElementById('temp-range').textContent = '--° ~ --°';\r\n\r\n        // 获取天气数据\r\n        const response = await fetch(API_URL);\r\n        const data = await response.json();\r\n\r\n        console.log('获取到的天气数据:', data); // 用于调试\r\n\r\n        // 更新当前天气\r\n        updateCurrentWeather(data);\r\n\r\n        // 更新未来天气预报\r\n        updateForecast(data);\r\n\r\n        // 添加淡入动画\r\n        document.getElementById('weather-card').classList.add('fade-in');\r\n\r\n        console.log('天气数据已更新');\r\n    } catch (error) {\r\n        console.error('获取天气数据失败:', error);\r\n        document.getElementById('weather-desc').textContent = '获取数据失败';\r\n    }\r\n}\r\n\r\n// 更新当前天气信息\r\nfunction updateCurrentWeather(data) {\r\n    const current = data.current_weather;\r\n    const weatherCode = current.weathercode;\r\n    const weatherInfo = weatherCodeMap[weatherCode] || { icon: 'fa-question', color: 'text-gray-500', desc: '未知' };\r\n\r\n    // 更新温度\r\n    document.getElementById('current-temp').textContent = `${current.temperature}°`;\r\n\r\n    // 更新天气描述和图标\r\n    document.getElementById('weather-desc').textContent = weatherInfo.desc;\r\n    const weatherIcon = document.getElementById('weather-icon');\r\n    weatherIcon.className = `fa-solid ${weatherInfo.icon} text-6xl ${weatherInfo.color} animate-pulse-slow`;\r\n\r\n    // 更新风速\r\n    document.getElementById('wind-speed').textContent = `${current.windspeed} km/h`;\r\n\r\n    // 获取当前小时的索引\r\n    const currentTime = new Date(current.time);\r\n    const currentHourIndex = currentTime.getHours();\r\n\r\n    // 更新降水量\r\n    document.getElementById('precipitation').textContent = `${data.hourly.precipitation[currentHourIndex]} mm`;\r\n\r\n    // 更新湿度\r\n    document.getElementById('humidity').textContent = `${data.hourly.relativehumidity_2m[currentHourIndex]}%`;\r\n\r\n    // 计算温度范围\r\n    const todayMaxTemp = data.daily.temperature_2m_max[0].toFixed(0);\r\n    const todayMinTemp = data.daily.temperature_2m_min[0].toFixed(0);\r\n    document.getElementById('temp-range').textContent = `${todayMinTemp}° ~ ${todayMaxTemp}°`;\r\n}\r\n\r\n// 生成未来天气预报的函数\r\nfunction updateForecast(data) {\r\n    const container = document.getElementById('forecast-container');\r\n    const weekdays = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'];\r\n\r\n    // 清空容器\r\n    container.innerHTML = '';\r\n\r\n    // 生成未来5天的预报（今天+未来4天）\r\n    for (let i = 0; i < 5; i++) {\r\n        // 获取日期\r\n        const forecastDate = new Date(data.daily.time[i]);\r\n        const dayOfWeek = weekdays[forecastDate.getDay()];\r\n        const isToday = i === 0 ? '今天' : dayOfWeek;\r\n\r\n        // 获取当天数据\r\n        const maxTemp = data.daily.temperature_2m_max[i].toFixed(0);\r\n        const minTemp = data.daily.temperature_2m_min[i].toFixed(0);\r\n\r\n        // 创建预报项（仅显示日期和温度）\r\n        const forecastItem = document.createElement('div');\r\n        forecastItem.className = 'text-center fade-in';\r\n        forecastItem.style.animationDelay = `${i * 0.1}s`;\r\n        forecastItem.innerHTML = `\r\n            <p class=\"text-xs text-neutral-500\">${isToday}</p>\r\n            <p class=\"text-xs font-medium text-neutral-800 mt-3\">${minTemp}°~${maxTemp}°</p>\r\n        `;\r\n\r\n        container.appendChild(forecastItem);\r\n    }\r\n}\r\n\r\n// 页面加载时初始化\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    // 立即获取天气数据\r\n    fetchWeatherData();\r\n\r\n    // 每秒更新当前时间\r\n    setInterval(updateCurrentTime, 1000);\r\n\r\n    // 每30分钟自动更新一次天气\r\n    setInterval(fetchWeatherData, 30 * 60 * 1000);\r\n\r\n    // 刷新按钮事件\r\n    document.getElementById('refresh-btn').addEventListener('click', () => {\r\n        fetchWeatherData();\r\n        // 添加按钮点击动画\r\n        const btn = document.getElementById('refresh-btn');\r\n        btn.classList.add('scale-95');\r\n        setTimeout(() => btn.classList.remove('scale-95'), 200);\r\n    });\r\n});\r\n\r\nexport default weather;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
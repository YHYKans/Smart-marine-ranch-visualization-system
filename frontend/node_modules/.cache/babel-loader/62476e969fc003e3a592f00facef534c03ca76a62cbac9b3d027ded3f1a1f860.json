{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u8F6F\\u4EF6\\u5DE5\\u7A0B\\\\\\u667A\\u6167\\u6D77\\u6D0B\\u7267\\u573A\\u53EF\\u89C6\\u5316\\u7CFB\\u7EDF\\\\frontend\\\\src\\\\pages\\\\Underwater.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Underwater() {\n  _s();\n  // ============== 状态声明 ==============\n  const [selectedDate, setSelectedDate] = useState('');\n  const [lineChart, setLineChart] = useState(null);\n  const [pieChart, setPieChart] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // ============== 常量定义 ==============\n  const minDate = '2020-05-08';\n  const maxDate = '2021-04-05';\n\n  // ============== 工具函数 ==============\n  const generateFilePath = dateString => {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `config/软件工程大作业数据/水质数据/${year}-${month}/${year}-${month}-${day}.json`;\n  };\n\n  // ============== 提交处理 ==============\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    try {\n      // 日期验证\n      if (!selectedDate || selectedDate < minDate || selectedDate > maxDate) {\n        throw new Error('请选择有效日期');\n      }\n\n      // 生成路径\n      const filePath = generateFilePath(selectedDate);\n\n      // 发送请求\n      const response = await fetch('http://localhost:3001/visualize-water', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          file_path: filePath\n        })\n      });\n      if (!response.ok) throw new Error('请求失败');\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n\n      // 更新状态\n      setLineChart(data.line_chart);\n      setPieChart(data.pie_chart);\n    } catch (err) {\n      setError(err.message);\n      setLineChart(null);\n      setPieChart(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"underwater-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value),\n        min: minDate,\n        max: maxDate,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? '生成中...' : '生成报告'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: \"\\u52A0\\u8F7D\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }, this), lineChart && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `data:image/png;base64,${lineChart}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }, this), pieChart && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `data:image/png;base64,${pieChart}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Underwater, \"f2XTpRoaVtF4Sw2Auk24FzC/JcY=\");\n_c = Underwater;\nexport default Underwater;\nvar _c;\n$RefreshReg$(_c, \"Underwater\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Underwater","_s","selectedDate","setSelectedDate","lineChart","setLineChart","pieChart","setPieChart","error","setError","isLoading","setIsLoading","minDate","maxDate","generateFilePath","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","handleSubmit","e","preventDefault","Error","filePath","response","fetch","method","headers","body","JSON","stringify","file_path","ok","data","json","line_chart","pie_chart","err","message","className","children","onSubmit","type","value","onChange","target","min","max","required","fileName","_jsxFileName","lineNumber","columnNumber","disabled","src","_c","$RefreshReg$"],"sources":["D:/软件工程/智慧海洋牧场可视化系统/frontend/src/pages/Underwater.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Underwater() {\n  // ============== 状态声明 ==============\n  const [selectedDate, setSelectedDate] = useState('');\n  const [lineChart, setLineChart] = useState(null);\n  const [pieChart, setPieChart] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // ============== 常量定义 ==============\n  const minDate = '2020-05-08';\n  const maxDate = '2021-04-05';\n\n  // ============== 工具函数 ==============\n  const generateFilePath = (dateString) => {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `config/软件工程大作业数据/水质数据/${year}-${month}/${year}-${month}-${day}.json`;\n  };\n\n  // ============== 提交处理 ==============\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      // 日期验证\n      if (!selectedDate || selectedDate < minDate || selectedDate > maxDate) {\n        throw new Error('请选择有效日期');\n      }\n\n      // 生成路径\n      const filePath = generateFilePath(selectedDate);\n\n      // 发送请求\n      const response = await fetch('http://localhost:3001/visualize-water', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ file_path: filePath })\n      });\n\n      if (!response.ok) throw new Error('请求失败');\n      \n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n\n      // 更新状态\n      setLineChart(data.line_chart);\n      setPieChart(data.pie_chart);\n    } catch (err) {\n      setError(err.message);\n      setLineChart(null);\n      setPieChart(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"underwater-container\">\n      {/* 表单部分 */}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"date\"\n          value={selectedDate}\n          onChange={(e) => setSelectedDate(e.target.value)}\n          min={minDate}\n          max={maxDate}\n          required\n        />\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? '生成中...' : '生成报告'}\n        </button>\n      </form>\n\n      {/* 错误提示 */}\n      {error && <div className=\"error\">{error}</div>}\n\n      {/* 加载状态 */}\n      {isLoading && <div className=\"loader\">加载中...</div>}\n\n      {/* 图表展示 */}\n      {lineChart && <img src={`data:image/png;base64,${lineChart}`} />}\n      {pieChart && <img src={`data:image/png;base64,${pieChart}`} />}\n    </div>\n  );\n}\n\nexport default Underwater;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
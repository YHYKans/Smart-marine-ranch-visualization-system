{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u8F6F\\u4EF6\\u5DE5\\u7A0B\\\\\\u667A\\u6167\\u6D77\\u6D0B\\u7267\\u573A\\u53EF\\u89C6\\u5316\\u7CFB\\u7EDF\\\\frontend\\\\src\\\\pages\\\\FishLengthPredictionPage.js\",\n  _s = $RefreshSig$();\n// src/pages/FishLengthPredictionPage.js\nimport React, { useState } from 'react';\nimport FishLengthPredictForm from '../components/FishLengthPredictForm';\nimport FishLengthPredictResult from '../components/FishLengthPredictResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FishLengthPredictionPage = () => {\n  _s();\n  const [predictionResult, setPredictionResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handlePredict = async fishData => {\n    setIsLoading(true);\n    setError('');\n    try {\n      // 调用后端API进行预测\n      const response = await fetch('http://localhost:3001/predict-fish-length', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(fishData)\n      });\n      if (!response.ok) {\n        throw new Error(`API请求失败: ${response.statusText}`);\n      }\n      const data = await response.json();\n\n      // 检查API返回是否包含错误\n      if (data.error) {\n        throw new Error(data.error);\n      }\n\n      // 更新预测结果\n      setPredictionResult({\n        predictedLength: data.length_prediction\n        //        accuracy: 85.7  // 假设模型准确率为85.7%，实际应用中应从API获取\n      });\n    } catch (err) {\n      setError(err.message);\n      console.error('鱼类体长预测错误:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-12 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-[clamp(2rem,5vw,3rem)] font-bold text-gray-900 mb-4\",\n          children: \"\\u667A\\u6167\\u6D77\\u6D0B\\u7267\\u573A - \\u9C7C\\u7C7B\\u4F53\\u957F\\u9884\\u6D4B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-lg max-w-2xl mx-auto\",\n          children: \"\\u8F93\\u5165\\u9C7C\\u7C7B\\u7684\\u4F53\\u91CD\\u3001\\u9AD8\\u5EA6\\u548C\\u5BBD\\u5EA6\\uFF0C\\u6211\\u4EEC\\u5C06\\u4F7F\\u7528\\u673A\\u5668\\u5B66\\u4E60\\u6A21\\u578B\\u9884\\u6D4B\\u5176\\u4F53\\u957F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid md:grid-cols-2 gap-8 max-w-5xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FishLengthPredictForm, {\n            onPredict: handlePredict\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FishLengthPredictResult, {\n            result: predictionResult,\n            loading: isLoading,\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FishLengthPredictionPage, \"+9le3Uw+5AiFmZVDr+qunCVJp6Q=\");\n_c = FishLengthPredictionPage;\nexport default FishLengthPredictionPage;\nvar _c;\n$RefreshReg$(_c, \"FishLengthPredictionPage\");","map":{"version":3,"names":["React","useState","FishLengthPredictForm","FishLengthPredictResult","jsxDEV","_jsxDEV","FishLengthPredictionPage","_s","predictionResult","setPredictionResult","isLoading","setIsLoading","error","setError","handlePredict","fishData","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","data","json","predictedLength","length_prediction","err","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPredict","result","loading","_c","$RefreshReg$"],"sources":["D:/软件工程/智慧海洋牧场可视化系统/frontend/src/pages/FishLengthPredictionPage.js"],"sourcesContent":["// src/pages/FishLengthPredictionPage.js\r\nimport React, { useState } from 'react';\r\nimport FishLengthPredictForm from '../components/FishLengthPredictForm';\r\nimport FishLengthPredictResult from '../components/FishLengthPredictResult';\r\n\r\nconst FishLengthPredictionPage = () => {\r\n  const [predictionResult, setPredictionResult] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handlePredict = async (fishData) => {\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // 调用后端API进行预测\r\n      const response = await fetch('http://localhost:3001/predict-fish-length', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(fishData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`API请求失败: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // 检查API返回是否包含错误\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      // 更新预测结果\r\n      setPredictionResult({\r\n        predictedLength: data.length_prediction,\r\n//        accuracy: 85.7  // 假设模型准确率为85.7%，实际应用中应从API获取\r\n      });\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('鱼类体长预测错误:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-[clamp(2rem,5vw,3rem)] font-bold text-gray-900 mb-4\">\r\n            智慧海洋牧场 - 鱼类体长预测\r\n          </h1>\r\n          <p className=\"text-gray-600 text-lg max-w-2xl mx-auto\">\r\n            输入鱼类的体重、高度和宽度，我们将使用机器学习模型预测其体长\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid md:grid-cols-2 gap-8 max-w-5xl mx-auto\">\r\n          <div>\r\n            <FishLengthPredictForm onPredict={handlePredict} />\r\n          </div>\r\n\r\n          <div>\r\n            <FishLengthPredictResult\r\n              result={predictionResult}\r\n              loading={isLoading}\r\n              error={error}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FishLengthPredictionPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
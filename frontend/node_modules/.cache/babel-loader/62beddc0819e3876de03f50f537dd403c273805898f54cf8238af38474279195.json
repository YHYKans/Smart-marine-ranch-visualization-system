{"ast":null,"code":"var _jsxFileName = \"D:\\\\SoftwareProject\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport AuthPage from './pages/AuthPage';\nimport UserDashboard from './pages/UserDashboard';\nimport AdminDashboard from './pages/AdminDashboard';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { AuthProvider } from './context/AuthContext';\n\n/**\n * App 组件 - 应用程序的根组件\n * \n * 功能：\n * 1. 设置应用程序的路由结构\n * 2. 包装整个应用在 AuthProvider 中，提供全局认证状态\n * 3. 定义受保护的路由，确保只有已认证用户才能访问相应页面\n * \n * 路由说明：\n * - \"/\" : 重定向到 \"/auth\"\n * - \"/auth\" : 认证页面（登录/注册）\n * - \"/user-dashboard\" : 普通用户仪表板（需要登录）\n * - \"/admin-dashboard\" : 管理员仪表板（需要管理员权限）\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return (\n    /*#__PURE__*/\n    // AuthProvider 为整个应用提供认证状态和相关方法\n    _jsxDEV(AuthProvider, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/auth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/auth\",\n            element: /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/user-dashboard\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              children: /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin-dashboard\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              requireAdmin: true,\n              children: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","AuthPage","UserDashboard","AdminDashboard","ProtectedRoute","AuthProvider","jsxDEV","_jsxDEV","App","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","requireAdmin","_c","$RefreshReg$"],"sources":["D:/SoftwareProject/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport AuthPage from './pages/AuthPage';\nimport UserDashboard from './pages/UserDashboard';\nimport AdminDashboard from './pages/AdminDashboard';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { AuthProvider } from './context/AuthContext';\n\n/**\n * App 组件 - 应用程序的根组件\n * \n * 功能：\n * 1. 设置应用程序的路由结构\n * 2. 包装整个应用在 AuthProvider 中，提供全局认证状态\n * 3. 定义受保护的路由，确保只有已认证用户才能访问相应页面\n * \n * 路由说明：\n * - \"/\" : 重定向到 \"/auth\"\n * - \"/auth\" : 认证页面（登录/注册）\n * - \"/user-dashboard\" : 普通用户仪表板（需要登录）\n * - \"/admin-dashboard\" : 管理员仪表板（需要管理员权限）\n */\nfunction App() {\n  return (\n    // AuthProvider 为整个应用提供认证状态和相关方法\n    <AuthProvider>\n      {/* 使用 React Router 管理应用的页面导航 */}\n      <Router>\n        <Routes>\n          {/* 根路径重定向到认证页面 */}\n          <Route path=\"/\" element={<Navigate to=\"/auth\" />} />\n          \n          {/* 认证页面 - 包含登录和注册功能 */}\n          <Route path=\"/auth\" element={<AuthPage />} />\n          \n          {/* 普通用户仪表板 - 需要登录才能访问 */}\n          <Route \n            path=\"/user-dashboard\" \n            element={\n              <ProtectedRoute>\n                <UserDashboard />\n              </ProtectedRoute>\n            } \n          />\n          \n          {/* 管理员仪表板 - 需要管理员权限才能访问 */}\n          <Route \n            path=\"/admin-dashboard\" \n            element={\n              <ProtectedRoute requireAdmin={true}>\n                <AdminDashboard />\n              </ProtectedRoute>\n            } \n          />\n        </Routes>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAASC,YAAY,QAAQ,uBAAuB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA,SAAAC,MAAA,IAAAC,OAAA;AAcA,SAASC,GAAGA,CAAA,EAAG;EACb;IAAA;IACE;IACAD,OAAA,CAACF,YAAY;MAAAI,QAAA,eAEXF,OAAA,CAACV,MAAM;QAAAY,QAAA,eACLF,OAAA,CAACT,MAAM;UAAAW,QAAA,gBAELF,OAAA,CAACR,KAAK;YAACW,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEJ,OAAA,CAACP,QAAQ;cAACY,EAAE,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAGpDT,OAAA,CAACR,KAAK;YAACW,IAAI,EAAC,OAAO;YAACC,OAAO,eAAEJ,OAAA,CAACN,QAAQ;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAG7CT,OAAA,CAACR,KAAK;YACJW,IAAI,EAAC,iBAAiB;YACtBC,OAAO,eACLJ,OAAA,CAACH,cAAc;cAAAK,QAAA,eACbF,OAAA,CAACL,aAAa;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UACjB;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eAGFT,OAAA,CAACR,KAAK;YACJW,IAAI,EAAC,kBAAkB;YACvBC,OAAO,eACLJ,OAAA,CAACH,cAAc;cAACa,YAAY,EAAE,IAAK;cAAAR,QAAA,eACjCF,OAAA,CAACJ,cAAc;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UACjB;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;AAEnB;AAACE,EAAA,GApCQV,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u8F6F\\u4EF6\\u5DE5\\u7A0B\\\\\\u667A\\u6167\\u6D77\\u6D0B\\u7267\\u573A\\u53EF\\u89C6\\u5316\\u7CFB\\u7EDF\\\\frontend\\\\src\\\\pages\\\\Video.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoList = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/videos');\n        const data = await response.json();\n        setVideos(data.videos);\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchVideos();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading videos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), videos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No videos found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: video\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        width: \"600\",\n        preload: \"auto\",\n        crossOrigin: \"anonymous\",\n        onLoadedMetadata: e => {\n          // 确保元数据加载成功\n          console.log('视频时长:', e.target.duration);\n        },\n        onProgress: e => {\n          // 显示加载进度\n          const buffered = e.target.buffered;\n          if (buffered.length > 0) {\n            console.log(`已缓冲至: ${buffered.end(0)}秒`);\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: `http://localhost:3001/video/${video}?cache=${Date.now()}`,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoList, \"PSjXGNrNjip6pTLeZjdJtTN37Qw=\");\n_c = VideoList;\nexport default VideoList;\nvar _c;\n$RefreshReg$(_c, \"VideoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VideoList","_s","videos","setVideos","loading","setLoading","fetchVideos","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","video","index","controls","width","preload","crossOrigin","onLoadedMetadata","e","log","target","duration","onProgress","buffered","end","src","Date","now","type","_c","$RefreshReg$"],"sources":["D:/软件工程/智慧海洋牧场可视化系统/frontend/src/pages/Video.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst VideoList = () => {\r\n  const [videos, setVideos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchVideos = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/api/videos');\r\n        const data = await response.json();\r\n        setVideos(data.videos);\r\n      } catch (error) {\r\n        console.error('Error fetching videos:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading videos...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"video-container\">\r\n      <h1>Video List</h1>\r\n      {videos.length === 0 ? (\r\n        <p>No videos found</p>\r\n      ) : (\r\n        videos.map((video, index) => (\r\n          <div key={index} className=\"video-item\">\r\n            <h3>{video}</h3>\r\n            <video \r\n              controls \r\n              width=\"600\"\r\n              preload=\"auto\"\r\n              crossOrigin=\"anonymous\"\r\n              onLoadedMetadata={(e) => {\r\n                // 确保元数据加载成功\r\n                console.log('视频时长:', e.target.duration);\r\n              }}\r\n              onProgress={(e) => {\r\n                // 显示加载进度\r\n                const buffered = e.target.buffered;\r\n                if (buffered.length > 0) {\r\n                  console.log(`已缓冲至: ${buffered.end(0)}秒`);\r\n                }\r\n              }}\r\n            >\r\n              <source\r\n                src={`http://localhost:3001/video/${video}?cache=${Date.now()}`}\r\n                type=\"video/mp4\"\r\n              />\r\n            </video>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default VideoList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
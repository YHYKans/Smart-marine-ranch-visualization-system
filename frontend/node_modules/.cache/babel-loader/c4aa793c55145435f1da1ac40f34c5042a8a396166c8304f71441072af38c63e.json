{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u8F6F\\u4EF6\\u5DE5\\u7A0B\\\\\\u667A\\u6167\\u6D77\\u6D0B\\u7267\\u573A\\u53EF\\u89C6\\u5316\\u7CFB\\u7EDF\\\\frontend\\\\src\\\\pages\\\\Underwater.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Underwater() {\n  _s();\n  const [availableDates, setAvailableDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [lineChart, setLineChart] = useState(null);\n  const [pieChart, setPieChart] = useState(null);\n  const [error, setError] = useState('');\n\n  // 初始化加载可用日期\n  useEffect(() => {\n    fetch('http://localhost:3001/get-available-dates').then(response => response.json()).then(data => {\n      if (data.error) throw new Error(data.error);\n      setAvailableDates(data);\n    }).catch(error => setError(error.message));\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedDate) {\n      setError('请选择日期');\n      return;\n    }\n\n    // 生成文件路径\n    const yearMonth = selectedDate.slice(0, 7); // 提取 YYYY-MM\n    const filePath = `config/软件工程大作业数据/水质数据/${yearMonth}/${selectedDate}.json`;\n    try {\n      const response = await fetch('http://localhost:3001/visualize-water', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          file_path: filePath\n        })\n      });\n\n      // ... 保持原有处理逻辑 ...\n    } catch (err) {\n      // ... 错误处理 ...\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"underwater-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u6C34\\u4E0B\\u6570\\u636E\\u53EF\\u89C6\\u5316\\u7CFB\\u7EDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value),\n        required: true,\n        style: {\n          width: '300px',\n          marginRight: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\u8BF7\\u9009\\u62E9\\u65E5\\u671F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), availableDates.map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: date,\n          children: date\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u53EF\\u89C6\\u5316\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Underwater, \"VYmB064M6o7Zw3y+D6HM/TodwOQ=\");\n_c = Underwater;\nvar _c;\n$RefreshReg$(_c, \"Underwater\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Underwater","_s","availableDates","setAvailableDates","selectedDate","setSelectedDate","lineChart","setLineChart","pieChart","setPieChart","error","setError","fetch","then","response","json","data","Error","catch","message","handleSubmit","e","preventDefault","yearMonth","slice","filePath","method","headers","body","JSON","stringify","file_path","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","style","width","marginRight","map","date","type","_c","$RefreshReg$"],"sources":["D:/软件工程/智慧海洋牧场可视化系统/frontend/src/pages/Underwater.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Underwater() {\n  const [availableDates, setAvailableDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [lineChart, setLineChart] = useState(null);\n  const [pieChart, setPieChart] = useState(null);\n  const [error, setError] = useState('');\n\n  // 初始化加载可用日期\n  useEffect(() => {\n    fetch('http://localhost:3001/get-available-dates')\n      .then(response => response.json())\n      .then(data => {\n        if (data.error) throw new Error(data.error);\n        setAvailableDates(data);\n      })\n      .catch(error => setError(error.message));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!selectedDate) {\n      setError('请选择日期');\n      return;\n    }\n\n    // 生成文件路径\n    const yearMonth = selectedDate.slice(0, 7); // 提取 YYYY-MM\n    const filePath = `config/软件工程大作业数据/水质数据/${yearMonth}/${selectedDate}.json`;\n\n    try {\n      const response = await fetch('http://localhost:3001/visualize-water', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ file_path: filePath })\n      });\n\n      // ... 保持原有处理逻辑 ...\n    } catch (err) {\n      // ... 错误处理 ...\n    }\n  };\n\n  return (\n    <div className=\"underwater-container\">\n      <h1>水下数据可视化系统</h1>\n      \n      <form onSubmit={handleSubmit}>\n        <select\n          value={selectedDate}\n          onChange={(e) => setSelectedDate(e.target.value)}\n          required\n          style={{ width: '300px', marginRight: '10px' }}\n        >\n          <option value=\"\">请选择日期</option>\n          {availableDates.map(date => (\n            <option key={date} value={date}>{date}</option>\n          ))}\n        </select>\n        <button type=\"submit\">可视化</button>\n      </form>\n\n      {/* 保持原有图表显示逻辑 */}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
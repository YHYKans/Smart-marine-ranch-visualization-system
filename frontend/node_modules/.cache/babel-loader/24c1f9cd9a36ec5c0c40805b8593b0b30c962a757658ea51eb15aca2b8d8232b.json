{"ast":null,"code":"import React,{useState}from'react';import{useAuth}from'../context/AuthContext';/**\r\n * LoginForm 组件 - 登录表单\r\n * \r\n * 功能：\r\n * 1. 提供用户名和密码输入字段\r\n * 2. 支持普通用户和管理员登录模式切换\r\n * 3. 表单验证和提交\r\n * 4. 显示登录状态和错误信息\r\n * 5. 提供跳转到注册页面的链接\r\n * \r\n * Props:\r\n * - switchToRegister: 切换到注册模式的回调函数\r\n */import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const LoginForm=_ref=>{let{switchToRegister}=_ref;// 用户类型状态：false = 普通用户，true = 管理员\nconst[isAdmin,setIsAdmin]=useState(false);// 用户名输入状态\nconst[username,setUsername]=useState('');// 密码输入状态\nconst[password,setPassword]=useState('');// 消息状态（用于显示错误或成功信息）\nconst[message,setMessage]=useState('');// 加载状态（登录请求进行中时显示）\nconst[isLoading,setIsLoading]=useState(false);// 从认证上下文获取登录方法\nconst{login}=useAuth();/**\r\n   * 处理表单提交\r\n   * @param {Event} e - 表单提交事件\r\n   */const handleSubmit=async e=>{e.preventDefault();// 阻止表单默认提交行为\nsetIsLoading(true);// 设置加载状态\nsetMessage('');// 清空之前的消息\ntry{// 调用登录方法\nawait login(username,password,isAdmin);// 登录成功后，AuthContext 会自动处理状态更新和路由跳转\n}catch(error){// 登录失败，显示错误信息\nsetMessage(error.message||'登录失败');}finally{// 无论成功或失败，都取消加载状态\nsetIsLoading(false);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[message&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-2 rounded bg-red-100 text-red-700\",children:message}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4 mb-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",checked:!isAdmin,onChange:()=>setIsAdmin(false),className:\"form-radio h-5 w-5 text-blue-600\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-gray-700\",children:\"\\u666E\\u901A\\u7528\\u6237\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",checked:isAdmin,onChange:()=>setIsAdmin(true),className:\"form-radio h-5 w-5 text-blue-600\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-gray-700\",children:\"\\u7BA1\\u7406\\u5458\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-bold mb-2\",htmlFor:\"username\",children:\"\\u7528\\u6237\\u540D\"}),/*#__PURE__*/_jsx(\"input\",{id:\"username\",type:\"text\",value:username,onChange:e=>setUsername(e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-bold mb-2\",htmlFor:\"password\",children:\"\\u5BC6\\u7801\"}),/*#__PURE__*/_jsx(\"input\",{id:\"password\",type:\"password\",value:password,onChange:e=>setPassword(e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",required:true})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading,className:\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors duration-300 disabled:opacity-50\",children:isLoading?'登录中...':'登录'})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-sm\",children:/*#__PURE__*/_jsx(\"button\",{onClick:switchToRegister,className:\"text-blue-600 hover:text-blue-800 focus:outline-none\",children:\"\\u6CA1\\u6709\\u8D26\\u53F7\\uFF1F\\u7ACB\\u5373\\u6CE8\\u518C\"})})]});};export default LoginForm;","map":{"version":3,"names":["React","useState","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LoginForm","_ref","switchToRegister","isAdmin","setIsAdmin","username","setUsername","password","setPassword","message","setMessage","isLoading","setIsLoading","login","handleSubmit","e","preventDefault","error","children","className","onSubmit","type","checked","onChange","htmlFor","id","value","target","required","disabled","onClick"],"sources":["E:/作业/大三下/软件工程/团队中期/Smart-marine-ranch-visualization-system/frontend/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\n/**\r\n * LoginForm 组件 - 登录表单\r\n * \r\n * 功能：\r\n * 1. 提供用户名和密码输入字段\r\n * 2. 支持普通用户和管理员登录模式切换\r\n * 3. 表单验证和提交\r\n * 4. 显示登录状态和错误信息\r\n * 5. 提供跳转到注册页面的链接\r\n * \r\n * Props:\r\n * - switchToRegister: 切换到注册模式的回调函数\r\n */\r\nconst LoginForm = ({ switchToRegister }) => {\r\n  // 用户类型状态：false = 普通用户，true = 管理员\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  // 用户名输入状态\r\n  const [username, setUsername] = useState('');\r\n  // 密码输入状态\r\n  const [password, setPassword] = useState('');\r\n  // 消息状态（用于显示错误或成功信息）\r\n  const [message, setMessage] = useState('');\r\n  // 加载状态（登录请求进行中时显示）\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // 从认证上下文获取登录方法\r\n  const { login } = useAuth();\r\n\r\n  /**\r\n   * 处理表单提交\r\n   * @param {Event} e - 表单提交事件\r\n   */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // 阻止表单默认提交行为\r\n    setIsLoading(true);  // 设置加载状态\r\n    setMessage('');      // 清空之前的消息\r\n    \r\n    try {\r\n      // 调用登录方法\r\n      await login(username, password, isAdmin);\r\n      // 登录成功后，AuthContext 会自动处理状态更新和路由跳转\r\n    } catch (error) {\r\n      // 登录失败，显示错误信息\r\n      setMessage(error.message || '登录失败');\r\n    } finally {\r\n      // 无论成功或失败，都取消加载状态\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 错误消息显示区域 */}\r\n      {message && (\r\n        <div className=\"mb-4 p-2 rounded bg-red-100 text-red-700\">\r\n          {message}\r\n        </div>\r\n      )}\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        {/* 用户类型选择区域 */}\r\n        <div className=\"mb-4\">\r\n          <div className=\"flex items-center space-x-4 mb-4\">\r\n            {/* 普通用户选项 */}\r\n            <label className=\"flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={!isAdmin}\r\n                onChange={() => setIsAdmin(false)}\r\n                className=\"form-radio h-5 w-5 text-blue-600\"\r\n              />\r\n              <span className=\"ml-2 text-gray-700\">普通用户</span>\r\n            </label>\r\n            \r\n            {/* 管理员选项 */}\r\n            <label className=\"flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={isAdmin}\r\n                onChange={() => setIsAdmin(true)}\r\n                className=\"form-radio h-5 w-5 text-blue-600\"\r\n              />\r\n              <span className=\"ml-2 text-gray-700\">管理员</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 用户名输入字段 */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n            用户名\r\n          </label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        {/* 密码输入字段 */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n            密码\r\n          </label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        {/* 登录按钮 */}\r\n        <div className=\"mb-6\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors duration-300 disabled:opacity-50\"\r\n          >\r\n            {isLoading ? '登录中...' : '登录'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      \r\n      {/* 跳转到注册页面的链接 */}\r\n      <div className=\"text-center text-sm\">\r\n        <button\r\n          onClick={switchToRegister}\r\n          className=\"text-blue-600 hover:text-blue-800 focus:outline-none\"\r\n        >\r\n          没有账号？立即注册\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
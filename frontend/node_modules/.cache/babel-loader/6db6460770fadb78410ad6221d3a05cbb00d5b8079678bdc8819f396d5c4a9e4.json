{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useAuth}from'../context/AuthContext';import LoginForm from'../components/LoginForm';import RegisterForm from'../components/RegisterForm';/**\r\n * AuthPage 组件 - 认证页面\r\n * \r\n * 功能：\r\n * 1. 提供用户登录和注册的界面\r\n * 2. 支持在登录和注册模式之间切换\r\n * 3. 检查用户认证状态，已登录用户自动跳转到相应的仪表板\r\n * 4. 根据用户类型（普通用户/管理员）跳转到不同的仪表板\r\n * \r\n * 页面结构：\r\n * - 渐变背景\r\n * - 居中的白色卡片容器\r\n * - 动态标题（根据模式显示\"用户登录\"或\"用户注册\"）\r\n * - 条件渲染登录或注册表单\r\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AuthPage=()=>{// 控制显示登录还是注册表单的状态\nconst[isLoginMode,setIsLoginMode]=useState(true);// 从认证上下文获取认证状态和用户信息\nconst{isAuthenticated,userInfo}=useAuth();// 路由导航钩子\nconst navigate=useNavigate();/**\r\n   * 监听认证状态变化\r\n   * 如果用户已登录，根据用户类型自动跳转到对应的仪表板\r\n   */useEffect(()=>{if(isAuthenticated){// 所有认证用户统一跳转到用户仪表板\nnavigate('/user-dashboard');}},[isAuthenticated,navigate]);return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-screen bg-gradient-to-r from-blue-100 to-purple-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 rounded-lg shadow-lg w-96 transition-all duration-300 transform hover:scale-105\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-800\",children:isLoginMode?'用户登录':'用户注册'}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mt-2\",children:isLoginMode?'欢迎回来':'创建新账号'})]}),isLoginMode?/*#__PURE__*/_jsx(LoginForm,{switchToRegister:()=>setIsLoginMode(false)}):/*#__PURE__*/_jsx(RegisterForm,{switchToLogin:()=>setIsLoginMode(true)})]})});};export default AuthPage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","LoginForm","RegisterForm","jsx","_jsx","jsxs","_jsxs","AuthPage","isLoginMode","setIsLoginMode","isAuthenticated","userInfo","navigate","className","children","switchToRegister","switchToLogin"],"sources":["D:/软件工程/智慧海洋牧场可视化系统/frontend/src/pages/AuthPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport LoginForm from '../components/LoginForm';\r\nimport RegisterForm from '../components/RegisterForm';\r\n\r\n/**\r\n * AuthPage 组件 - 认证页面\r\n * \r\n * 功能：\r\n * 1. 提供用户登录和注册的界面\r\n * 2. 支持在登录和注册模式之间切换\r\n * 3. 检查用户认证状态，已登录用户自动跳转到相应的仪表板\r\n * 4. 根据用户类型（普通用户/管理员）跳转到不同的仪表板\r\n * \r\n * 页面结构：\r\n * - 渐变背景\r\n * - 居中的白色卡片容器\r\n * - 动态标题（根据模式显示\"用户登录\"或\"用户注册\"）\r\n * - 条件渲染登录或注册表单\r\n */\r\nconst AuthPage = () => {\r\n  // 控制显示登录还是注册表单的状态\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  \r\n  // 从认证上下文获取认证状态和用户信息\r\n  const { isAuthenticated, userInfo } = useAuth();\r\n  \r\n  // 路由导航钩子\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n   * 监听认证状态变化\r\n   * 如果用户已登录，根据用户类型自动跳转到对应的仪表板\r\n   */\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      // 所有认证用户统一跳转到用户仪表板\r\n      navigate('/user-dashboard');\r\n    }\r\n  }, [isAuthenticated, navigate]); \r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-r from-blue-100 to-purple-100\">\r\n      {/* \r\n        主容器卡片\r\n        - bg-white: 白色背景\r\n        - p-8: 内边距\r\n        - rounded-lg: 圆角\r\n        - shadow-lg: 阴影\r\n        - w-96: 固定宽度\r\n        - transition-all duration-300: 过渡动画\r\n        - transform hover:scale-105: 悬停时轻微放大效果\r\n      */}\r\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-96 transition-all duration-300 transform hover:scale-105\">\r\n        {/* 页面标题区域 */}\r\n        <div className=\"text-center mb-8\">\r\n          {/* 动态标题 - 根据当前模式显示不同文字 */}\r\n          <h1 className=\"text-3xl font-bold text-gray-800\">\r\n            {isLoginMode ? '用户登录' : '用户注册'}\r\n          </h1>\r\n          {/* 副标题 - 根据当前模式显示不同文字 */}\r\n          <p className=\"text-gray-600 mt-2\">\r\n            {isLoginMode ? '欢迎回来' : '创建新账号'}\r\n          </p>\r\n        </div>\r\n        \r\n        {/* 条件渲染登录或注册表单 */}\r\n        {isLoginMode ? (\r\n          <LoginForm switchToRegister={() => setIsLoginMode(false)} />\r\n        ) : (\r\n          <RegisterForm switchToLogin={() => setIsLoginMode(true)} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,OAAO,KAAQ,wBAAwB,CAChD,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAdA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAeA,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB;AACA,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAEpD;AACA,KAAM,CAAEa,eAAe,CAAEC,QAAS,CAAC,CAAGX,OAAO,CAAC,CAAC,CAE/C;AACA,KAAM,CAAAY,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9B;AACF;AACA;AACA,KACED,SAAS,CAAC,IAAM,CACd,GAAIY,eAAe,CAAE,CACnB;AACAE,QAAQ,CAAC,iBAAiB,CAAC,CAC7B,CACF,CAAC,CAAE,CAACF,eAAe,CAAEE,QAAQ,CAAC,CAAC,CAE/B,mBACER,IAAA,QAAKS,SAAS,CAAC,4FAA4F,CAAAC,QAAA,cAWzGR,KAAA,QAAKO,SAAS,CAAC,8FAA8F,CAAAC,QAAA,eAE3GR,KAAA,QAAKO,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAE/BV,IAAA,OAAIS,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAC7CN,WAAW,CAAG,MAAM,CAAG,MAAM,CAC5B,CAAC,cAELJ,IAAA,MAAGS,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAC9BN,WAAW,CAAG,MAAM,CAAG,OAAO,CAC9B,CAAC,EACD,CAAC,CAGLA,WAAW,cACVJ,IAAA,CAACH,SAAS,EAACc,gBAAgB,CAAEA,CAAA,GAAMN,cAAc,CAAC,KAAK,CAAE,CAAE,CAAC,cAE5DL,IAAA,CAACF,YAAY,EAACc,aAAa,CAAEA,CAAA,GAAMP,cAAc,CAAC,IAAI,CAAE,CAAE,CAC3D,EACE,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\SoftwareProject\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      const user = localStorage.getItem('user');\n      if (token && user) {\n        try {\n          const response = await fetch('/api/user', {\n            headers: {\n              'x-auth-token': token\n            }\n          });\n          if (response.ok) {\n            setIsAuthenticated(true);\n            setUserInfo(JSON.parse(user));\n          } else {\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n          }\n        } catch (error) {\n          console.error('验证令牌时出错:', error);\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (username, password, isAdmin) => {\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          isAdmin\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || '登录失败');\n      }\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n      }\n      localStorage.setItem('user', JSON.stringify(data.user));\n      setIsAuthenticated(true);\n      setUserInfo(data.user);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async (username, email, password, isAdmin, adminCode) => {\n    try {\n      const userData = {\n        username,\n        email,\n        password,\n        isAdmin\n      };\n      if (isAdmin && adminCode) {\n        userData.adminCode = adminCode;\n      }\n      const response = await fetch('/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || '注册失败');\n      }\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (token) {\n        await fetch('/api/logout', {\n          method: 'POST',\n          headers: {\n            'x-auth-token': token\n          }\n        });\n      }\n    } catch (error) {\n      console.error('登出请求失败:', error);\n    } finally {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setIsAuthenticated(false);\n      setUserInfo(null);\n    }\n  };\n  const authFetch = async (url, options = {}) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('未授权');\n    }\n    const headers = {\n      ...options.headers,\n      'x-auth-token': token\n    };\n    const response = await fetch(url, {\n      ...options,\n      headers\n    });\n    if (response.status === 401) {\n      logout();\n      throw new Error('会话已过期，请重新登录');\n    }\n    return response;\n  };\n  const value = {\n    isAuthenticated,\n    userInfo,\n    loading,\n    login,\n    register,\n    logout,\n    authFetch\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"pbXGSZ+SUQjZXIYHquUWAeGf1f8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","userInfo","setUserInfo","loading","setLoading","checkAuth","token","localStorage","getItem","user","response","fetch","headers","ok","JSON","parse","removeItem","error","console","login","username","password","isAdmin","method","body","stringify","data","json","Error","message","setItem","register","email","adminCode","userData","logout","authFetch","url","options","status","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SoftwareProject/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const user = localStorage.getItem('user');\r\n      \r\n      if (token && user) {\r\n        try {\r\n          const response = await fetch('/api/user', {\r\n            headers: {\r\n              'x-auth-token': token\r\n            }\r\n          });\r\n          \r\n          if (response.ok) {\r\n            setIsAuthenticated(true);\r\n            setUserInfo(JSON.parse(user));\r\n          } else {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n          }\r\n        } catch (error) {\r\n          console.error('验证令牌时出错:', error);\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n        }\r\n      }\r\n      \r\n      setLoading(false);\r\n    };\r\n    \r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (username, password, isAdmin) => {\r\n    try {\r\n      const response = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password, isAdmin }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || '登录失败');\r\n      }\r\n      \r\n      if (data.token) {\r\n        localStorage.setItem('token', data.token);\r\n      }\r\n      \r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n      \r\n      setIsAuthenticated(true);\r\n      setUserInfo(data.user);\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password, isAdmin, adminCode) => {\r\n    try {\r\n      const userData = { username, email, password, isAdmin };\r\n      \r\n      if (isAdmin && adminCode) {\r\n        userData.adminCode = adminCode;\r\n      }\r\n      \r\n      const response = await fetch('/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || '注册失败');\r\n      }\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (token) {\r\n        await fetch('/api/logout', {\r\n          method: 'POST',\r\n          headers: {\r\n            'x-auth-token': token\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('登出请求失败:', error);\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      setIsAuthenticated(false);\r\n      setUserInfo(null);\r\n    }\r\n  };\r\n\r\n  const authFetch = async (url, options = {}) => {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (!token) {\r\n      throw new Error('未授权');\r\n    }\r\n    \r\n    const headers = {\r\n      ...options.headers,\r\n      'x-auth-token': token\r\n    };\r\n    \r\n    const response = await fetch(url, {\r\n      ...options,\r\n      headers\r\n    });\r\n    \r\n    if (response.status === 401) {\r\n      logout();\r\n      throw new Error('会话已过期，请重新登录');\r\n    }\r\n    \r\n    return response;\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    userInfo,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    authFetch\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAEzC,IAAIF,KAAK,IAAIG,IAAI,EAAE;QACjB,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;YACxCC,OAAO,EAAE;cACP,cAAc,EAAEN;YAClB;UACF,CAAC,CAAC;UAEF,IAAII,QAAQ,CAACG,EAAE,EAAE;YACfb,kBAAkB,CAAC,IAAI,CAAC;YACxBE,WAAW,CAACY,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CAAC;UAC/B,CAAC,MAAM;YACLF,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;YAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;UACjC;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;UAChCV,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;UAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;QACjC;MACF;MAEAZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,EAAEC,OAAO,KAAK;IACnD,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACzCY,MAAM,EAAE,MAAM;QACdX,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDY,IAAI,EAAEV,IAAI,CAACW,SAAS,CAAC;UAAEL,QAAQ;UAAEC,QAAQ;UAAEC;QAAQ,CAAC;MACtD,CAAC,CAAC;MAEF,MAAMI,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;MAElC,IAAI,CAACjB,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIe,KAAK,CAACF,IAAI,CAACG,OAAO,IAAI,MAAM,CAAC;MACzC;MAEA,IAAIH,IAAI,CAACpB,KAAK,EAAE;QACdC,YAAY,CAACuB,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACpB,KAAK,CAAC;MAC3C;MAEAC,YAAY,CAACuB,OAAO,CAAC,MAAM,EAAEhB,IAAI,CAACW,SAAS,CAACC,IAAI,CAACjB,IAAI,CAAC,CAAC;MAEvDT,kBAAkB,CAAC,IAAI,CAAC;MACxBE,WAAW,CAACwB,IAAI,CAACjB,IAAI,CAAC;MAEtB,OAAOiB,IAAI;IACb,CAAC,CAAC,OAAOT,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMc,QAAQ,GAAG,MAAAA,CAAOX,QAAQ,EAAEY,KAAK,EAAEX,QAAQ,EAAEC,OAAO,EAAEW,SAAS,KAAK;IACxE,IAAI;MACF,MAAMC,QAAQ,GAAG;QAAEd,QAAQ;QAAEY,KAAK;QAAEX,QAAQ;QAAEC;MAAQ,CAAC;MAEvD,IAAIA,OAAO,IAAIW,SAAS,EAAE;QACxBC,QAAQ,CAACD,SAAS,GAAGA,SAAS;MAChC;MAEA,MAAMvB,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC5CY,MAAM,EAAE,MAAM;QACdX,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDY,IAAI,EAAEV,IAAI,CAACW,SAAS,CAACS,QAAQ;MAC/B,CAAC,CAAC;MAEF,MAAMR,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;MAElC,IAAI,CAACjB,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIe,KAAK,CAACF,IAAI,CAACG,OAAO,IAAI,MAAM,CAAC;MACzC;MAEA,OAAOH,IAAI;IACb,CAAC,CAAC,OAAOT,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMkB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAM7B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAIF,KAAK,EAAE;QACT,MAAMK,KAAK,CAAC,aAAa,EAAE;UACzBY,MAAM,EAAE,MAAM;UACdX,OAAO,EAAE;YACP,cAAc,EAAEN;UAClB;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IACjC,CAAC,SAAS;MACRV,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;MAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;MAC/BhB,kBAAkB,CAAC,KAAK,CAAC;MACzBE,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;EAED,MAAMkC,SAAS,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IAC7C,MAAMhC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACV,MAAM,IAAIsB,KAAK,CAAC,KAAK,CAAC;IACxB;IAEA,MAAMhB,OAAO,GAAG;MACd,GAAG0B,OAAO,CAAC1B,OAAO;MAClB,cAAc,EAAEN;IAClB,CAAC;IAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC0B,GAAG,EAAE;MAChC,GAAGC,OAAO;MACV1B;IACF,CAAC,CAAC;IAEF,IAAIF,QAAQ,CAAC6B,MAAM,KAAK,GAAG,EAAE;MAC3BJ,MAAM,CAAC,CAAC;MACR,MAAM,IAAIP,KAAK,CAAC,aAAa,CAAC;IAChC;IAEA,OAAOlB,QAAQ;EACjB,CAAC;EAED,MAAM8B,KAAK,GAAG;IACZzC,eAAe;IACfE,QAAQ;IACRE,OAAO;IACPgB,KAAK;IACLY,QAAQ;IACRI,MAAM;IACNC;EACF,CAAC;EAED,oBACE5C,OAAA,CAACC,WAAW,CAACgD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA3C,QAAA,EAChC,CAACM,OAAO,IAAIN;EAAQ;IAAA6C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAC/C,GAAA,CA/JWF,YAAY;AAAAkD,EAAA,GAAZlD,YAAY;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}